<Chapter><Heading>Congruence Subgroups, Cuspidal Cohomology  and Hecke Operators</Heading>

In this chapter we explain how HAP can be used to make computions 
about modular forms associated to congruence subgroups <M>\Gamma</M> of <M>SL_2(\mathbb Z)</M>. Also, in  Subsection 10.8 onwards, we demonstrate
 cohomology computations for the <E>Picard group</E> <M>SL_2(\mathbb Z[i])</M>,
 some <E>Bianchi groups</E>
 <M>PSL_2({\cal O}_{-d}) </M> where <M>{\cal O}_{d}</M> is the ring of integers of <M>\mathbb Q(\sqrt{-d})</M> for  square free positive integer <M>d</M>, and some other groups of the form
<M>SL_m({\cal O})</M>, 
<M>GL_m({\cal O})</M>,
<M>PSL_m({\cal O})</M>, 
<M>PGL_m({\cal O})</M>,
 for <M>m=2,3,4</M> and certain <M>{\cal O}=\mathbb Z, {\cal O}_{-d}</M>.
 

<Section><Heading>Eichler-Shimura isomorphism</Heading>

<P/>We begin by recalling the Eichler-Shimura isomorphism
<Cite Key="eichler"/><Cite Key="shimura"/>
<Display> S_k(\Gamma) \oplus \overline{S_k(\Gamma)} \oplus E_k(\Gamma) \cong_{\sf Hecke} H^1(\Gamma,P_{\mathbb C}(k-2))</Display>
<P/> which relates the cohomology of groups to the theory of modular forms associated to a finite index subgroup <M>\Gamma</M> of <M>SL_2(\mathbb Z)</M>. In subsequent sections we explain how to compute with the right-hand side of the isomorphism. But first,
for completeness,  let us define the terms on the  left-hand side.

<P/> Let <M>N</M> be a positive integer. A subgroup <M>\Gamma</M> of <M>SL_2(\mathbb Z)</M> is said to be a  <E>congruence subgroup</E> of level <M>N </M> if it contains the kernel of the canonical homomorphism  <M>\pi_N\colon SL_2(\mathbb Z) \rightarrow SL_2(\mathbb Z/N\mathbb Z)</M>. 

So any congruence subgroup is of finite index in <M>SL_2(\mathbb Z)</M>, 
but the converse is not true. 

<P/>One congruence subgroup of particular interest is the group
<M>\Gamma_1(N)=\ker(\pi_N)</M>, known as the <E>principal congruence subgroup</E> of level <M>N</M>. Another congruence subgroup of particular interest is the group  <M>\Gamma_0(N)</M> of those matrices that project to upper triangular matrices
in <M>SL_2(\mathbb Z/N\mathbb Z)</M>.  

<P/>A <E>modular form</E> of weight <M>k</M> for a congruence subgroup
<M>\Gamma</M> is a complex valued  function on the upper-half plane,
 <M>f\colon {\frak{h}}=\{z\in \mathbb C : Re(z)>0\} \rightarrow \mathbb C</M>, satisfying:
<List>
<Item> <M>\displaystyle f(\frac{az+b}{cz+d}) = (cz+d)^k f(z)</M> for <M>\left(\begin{array}{ll}a&amp;b\\ c &amp;d \end{array}\right) \in \Gamma</M>,
</Item>
<Item> <M>f</M> is `holomorphic' on the <E>extended upper-half plane</E> 
<M>\frak{h}^\ast = \frak{h} \cup \mathbb Q \cup \{\infty\}</M> obtained from the upper-half plane by `adjoining a point at each cusp'.
</Item>
</List>
The collection of all weight <M>k</M> modular forms for <M>\Gamma</M> form a vector space <M>M_k(\Gamma)</M> over <M>\mathbb C</M>.

<P/>A modular form <M>f</M> is said to be a <E>cusp form</E> if <M>f(\infty)=0</M>. The collection of all weight <M>k</M> cusp forms for <M>\Gamma</M> form a vector subspace <M>S_k(\Gamma)</M>. There is a decomposition 
<Display>M_k(\Gamma) \cong S_k(\Gamma) \oplus E_k(\Gamma)</Display>
<P/> involving a summand <M>E_k(\Gamma)</M>  known as the <E>Eisenstein
space</E>. See <Cite Key="stein"/> for further introductory details on modular forms. 
<P/>The Eichler-Shimura isomorphism is more than an isomorphism of vector spaces. It is an isomorphism of Hecke modules: both sides admit  notions of <E>Hecke operators</E>, and the isomorphism preserves these operators. The bar on the left-hand side of the isomorphism denotes complex conjugation, or <E>anti-holomorphic</E> forms. See
<Cite Key="wieser"/> for a full account of the isomorphism.

<P/><P/>
On the right-hand side of the isomorphism, the <M>\mathbb Z\Gamma</M>-module 
<M>P_{\mathbb C}(k-2)\subset \mathbb C[x,y]</M> denotes the space of homogeneous degree 
<M>k-2</M> polynomials with action of <M>\Gamma</M> given by
<Display>\left(\begin{array}{ll}a&amp;b\\ c &amp;d \end{array}\right)\cdot p(x,y) = p(dx-by,-cx+ay)\ .</Display>
In particular <M>P_{\mathbb C}(0)=\mathbb C</M> is the trivial module.
Below we shall compute with the integral analogue <M>P_{\mathbb Z}(k-2) \subset \mathbb Z[x,y]</M>.


<P/><P/>
In the following sections we  explain how to use the right-hand side of the Eichler-Shimura
isomorphism to compute eigenvalues of the Hecke operators restricted to the 
 subspace        
 <M>S_k(\Gamma)</M> of cusp forms.

</Section>

<Section><Heading>Generators for <M>SL_2(\mathbb Z)</M> and the cubic tree</Heading>

<P/> The matrices 
<M>S=\left(\begin{array}{rr}0&amp;-1\\ 1 &amp;0 \end{array}\right)</M>
and <M>T=\left(\begin{array}{rr}1&amp;1\\ 0 &amp;1 \end{array}\right)</M>
generate <M>SL_2(\mathbb Z)</M> and it is not difficult to devise an algorithm for expressing an arbitrary integer matrix <M>A</M>
of determinant <M>1</M> as a word
in <M>S</M>, <M>T</M> and their inverses. The following illustrates such an algorithm.

<Example>
<#Include SYSTEM "tutex/11.1.txt">
</Example>

It is convenient to introduce the matrix <M>U=ST = \left(\begin{array}{rr}0&amp;-1\\ 1 &amp;1 \end{array}\right)</M>. The matrices <M>S</M> and <M>U</M>
also generate <M>SL_2(\mathbb Z)</M>. In fact we have a free presentation
 <M>SL_2(\mathbb Z)= \langle S,T\, |\, S^4=U^6=1 \rangle </M>. 

<P/><P/>
The <E>cubic tree</E> <M>\cal T</M> is a tree (<E>i.e.</E> a <M>1</M>-dimensional  contractible regular  
CW-complex) with countably infinitely many edges in which each vertex has degree <M>3</M>.


We can realize  the cubic tree <M>\cal T</M> by taking the
left cosets of <M>{\cal U}=\langle U\rangle</M> in <M>SL_2(\mathbb Z)</M> as vertices, and joining cosets
<M>x\,{\cal U} </M> and <M>y\,{\cal U}</M> by an edge if, and only if, 
<M>x^{-1}y \in {\cal U}\, S\,{\cal U}</M>. Thus the
vertex <M>\cal U </M> is joined to <M>S\,{\cal U} </M>, 
<M>US\,{\cal U}</M> and <M>U^2S\,{\cal U}</M>. The vertices of this tree
are in one-to-one
correspondence with all reduced words in <M>S</M>, <M>U</M>  and <M>U^2</M> 
that, apart from the identity, end in <M>S</M>.

<P/> From our realization of the cubic tree <M>\cal T</M>
we see that <M>SL_2(\mathbb Z)</M> acts on <M>\cal T</M> in such a way that
each vertex is stabilized by a cyclic subgroup conjugate to <M>{\cal U}=\langle U\rangle</M> and each edge is stabilized by a cyclic subgroup conjugate to
<M>{\cal S} =\langle S \rangle</M>.

<P/> In order to store this action of <M>SL_2(\mathbb Z)</M> on
the cubic tree <M>\cal T</M> we just need to record the following finite amount of information.
<P/>
<Alt Only="HTML">&lt;img src="images/fdsl2.png" align="center" width="350" alt="Information for the cubic tree"/>
</Alt>

</Section>

<Section><Heading>One-dimensional fundamental domains and generators for congruence subgroups</Heading>

Recall that a <E>cell structure</E> on a space <M>X</M> is a partition of 
<M>X</M> into subsets <M>e_i</M> such that each <M>e_i</M> is homeomorphic to 
an open Euclidean ball of some dimension. We say that <M>e_i</M> is an 
<M>n</M>-<E>cell</E> if it is homeomorphic to the open <M>n</M>-dimensional ball. We say that the cell structure is <E>reduced</E> if it has precisely one <M>0</M>-cell.  A CW-complex is a cell complex  satisfying  extra conditions.

<P/> 
Suppose that we wish to compute a set of generators for a congruence subgroup 
<M>\Gamma</M>. The required generators correspond to the
 <M>1</M>-cells of   a 
 reduced classifying CW-complex (or free resolution) <M>B(\Gamma)</M>. Such a classifying complex  can be constructed, using perturbation techniques,
 from  <M> \cal T</M> and reduced classifying CW-complexes 
<M>B(stab(e^0))</M>, <M>B(Stab(e^1))</M> for the stabilizer groups of a
vertex and edge of <M>\cal T</M>. In this construction, the  <M>1</M>-cells of <M>B(\Gamma)</M>
are in one-one correspondence with generators for the first homology of the quotient graph  
<M> \Gamma \setminus \cal T</M> together with the <M>1</M>-cells of <M>B(stab(e^0))</M>. If
<M>\Gamma</M> acts freely on the vertices of <M> \cal T</M> then the  <M>1</M>-cells of <M>B(\Gamma)</M>
are in one-one correspondence with just the          
generators for the first homology of                                                 <M> \Gamma \setminus \cal T</M>. To determine the quotient
<M> \Gamma \setminus \cal T</M> we need to determine a cellular subspace 
<M>D_\Gamma \subset \cal T</M>   whose images under the action of <M>\Gamma</M>  cover <M>\cal T</M> and are  pairwise either disjoint or identical. The subspace <M>D_\Gamma</M> will not be a CW-complex as it won't be closed, but it can be chosen to be connected, and hence contractible. We call <M>D_\Gamma</M> a <E>fundamental region</E> for <M>\Gamma</M>. We denote by <M>\mathring D_\Gamma</M> the largest CW-subcomplex of <M>D_\Gamma</M>. The vertices of <M>\mathring D_\Gamma</M> are the same as the vertices of <M>D_\Gamma</M>. Thus <M>\mathring D_\Gamma</M> is a subtree of the cubic tree whose vertices correspond to coset representatives of <M>\Gamma</M> in

<M>SL_2(\mathbb Z)</M>. For each vertex <M>v</M> in  the tree
<M>\mathring D_\Gamma</M> define <M>\eta(v)=3 -{\rm degree}(v)</M>. Then the number of homology generators for <M> \Gamma \setminus \cal T</M>  will
 be <M>(1/2)\sum_{v\in \mathring D_\Gamma} \eta(v)</M>. The role of tree diagrams in the study of congruence subgroups of <M>SL_2(\mathbb Z)</M>
 is explained in detail in <Cite Key="kulkarni"/>.
  
<P/>Suppose that we wish to calculate a set of generators for the principal
congruence subgroup <M>\Gamma_1(N)</M> of level <M>N</M>. Note that <M>\Gamma_1(N)</M>  intersects trivially with   
<M>\cal U</M>,  and hence 
 <M>\Gamma_1(N)</M> acts freely on the vertices of the cubical tree <M>\cal T</M>.
The following commands determine generators for <M>\Gamma_1(6)</M> and display
<M>\mathring D_{\Gamma_1(6)}</M>.

<Example>
<#Include SYSTEM "tutex/11.2.txt">
</Example>
<P/>
<Alt Only="HTML">&lt;img src="images/pctree6.gif" align="center" width="350" alt="Fundamental region in the   cubic tree"/>
</Alt>

<P/>The congruence subgroup <M>\Gamma_0(N)</M> does not act freely on the vertices of <M>\cal T</M>. However, we can replace <M>\cal T</M> by a double cover
<M>{\cal T}'</M> which admits a free action of <M>\Gamma_0(N)</M> on its vertices.
The following commands  display
<M>\mathring D_{\Gamma_1(39)}</M> for a fundamental region in <M>{\cal T}'</M>.

<Example>
<#Include SYSTEM "tutex/11.3.txt">
</Example>
<P/>
<Alt Only="HTML">&lt;img src="images/g0tree39.gif" align="center" width="350" alt="Fundamental region in the   cubic tree"/>
</Alt>

<P/> To compute <M>D_\Gamma</M> one only needs to be able to test whether a given matrix lies in <M>\Gamma</M> or not. However, for speed, the above calculations of <M>D_\Gamma</M> take advantage in GAP's facility for iterating over elements of <M>SL_2(\mathbb Z/N \mathbb Z)</M>. An algorithm that does not use this facility is also implemented but seems to be a bit slower in general.
<P/> 
Given an inclusion <M>\Gamma'\subset \Gamma</M> of congruence subgroups, it is straightforward to use the trees <M>\mathring D_{\Gamma'}</M> and <M>\mathring D_{\Gamma}</M> to compute a system of coset representative for <M>\Gamma'\setminus \Gamma</M>.
</Section>

<Section><Heading>Cohomology of congruence subgroups</Heading>

To compute the cohomology <M>H^n(\Gamma,A)</M> of a congruence subgroup 
<M>\Gamma</M> with coefficients in a <M>\mathbb Z\Gamma</M>-module <M>A</M>
 we need to construct <M>n+1</M> terms of a free
<M>\mathbb ZG</M>-resolution of <M>\mathbb Z</M>. We can do this by first 
using perturbation techniques (as described in <Cite Key="buiellis"/>) to combine the cubic tree with resolutions for
 the cyclic groups of order <M>4</M> and <M>6</M> in order to produce a free
<M>\mathbb ZG</M>-resolution <M>R_\ast</M> for <M>G=SL_2(\mathbb Z)</M>. This resolution is also a free <M>\mathbb Z\Gamma</M>-resolution with each term of rank
<Display>{\rm rank}_{\mathbb Z\Gamma} R_k = |G:\Gamma|\times {\rm rank}_{\mathbb ZG} R_k\ .</Display>
<P/>For congruence subgroups of lowish index in <M>G</M> this resolution suffices to make computations.

<P/>The following commands compute
<Display>H^1(\Gamma_0(39),\mathbb Z) = \mathbb Z^9\ .</Display>


<Example>
<#Include SYSTEM "tutex/11.4.txt">
</Example>

<P/>This  computation establishes that the space <M>M_2(\Gamma_0(39))</M>
of weight <M>2</M> modular forms is of dimension <M>9</M>.


<P/>The following commands show that 
<M>{\rm rank}_{\mathbb Z\Gamma_0(39)} R_1 = 112</M>
but that it is possible to apply `Tietze like' simplifications to <M>R_\ast</M> to obtain a free <M>\mathbb Z\Gamma_0(39)</M>-resolution <M>T_\ast</M>
with <M>{\rm rank}_{\mathbb Z\Gamma_0(39)} T_1 = 11</M>. It is  more efficient to work with <M>T_\ast</M> when making cohomology computations with coefficients in a module <M>A</M> of large rank. 
<Example>
<#Include SYSTEM "tutex/11.5.txt">
</Example>


<P/>The following commands compute
<Display>H^1(\Gamma_0(39),P_{\mathbb Z}(8)) = \mathbb Z_3 \oplus \mathbb Z_6
\oplus \mathbb Z_{168} \oplus \mathbb Z^{84}\ ,</Display>
<Display>H^1(\Gamma_0(39),P_{\mathbb Z}(9)) = \mathbb Z_2 \oplus \mathbb Z_2 .</Display>


<Example>
<#Include SYSTEM "tutex/11.4a.txt">
</Example>

<P/>This computation establishes that the space <M>M_{10}(\Gamma_0(39))</M>
of weight <M>10</M> modular forms is of dimension <M>84</M>, 
and <M>M_{11}(\Gamma_0(39))</M> is of dimension <M>0</M>. 
(There are never any modular forms of odd weight, and so 
<M>M_k(\Gamma)=0</M> for all odd <M>k</M> and any congruence subgroup 
<M>\Gamma</M>.)
</Section>

<Section><Heading>Cuspidal cohomology</Heading>
To define and compute cuspidal cohomology we  consider the action of 
<M>SL_2(\mathbb Z)</M> on the upper-half plane <M>{\frak h}</M>
given by
<Display>\left(\begin{array}{ll}a&amp;b\\ c &amp;d \end{array}\right) z =
\frac{az +b}{cz+d}\ .</Display>
A standard 'fundamental domain' for this action is the region

<Display>\begin{array}{ll}
 D=&amp;\{z\in {\frak h}\ :\ |z| &gt; 1, |{\rm Re}(z)| &lt; \frac{1}{2}\} \\ 
&amp;
\cup\ \{z\in {\frak h} \ :\ |z| \ge 1, {\rm Re}(z)=-\frac{1}{2}\}\\ 
&amp; \cup\ \{z \in {\frak h}\ :\ |z|=1, -\frac{1}{2} \le {\rm Re}(z) \le 0\}
\end{array}
</Display>
illustrated below.

<P/><Alt Only="HTML">&lt;img src="images/filename-1.png" align="center" width="450" alt="Fundamental domain in the upper-half plane"/>
</Alt>

<P/> The action factors through an action of
<M>PSL_2(\mathbb Z) =SL_2(\mathbb Z)/\langle
\left(\begin{array}{rr}-1&amp;0\\ 0 &amp;-1 \end{array}\right)\rangle</M>.  The images of <M>D</M> under the action of <M>PSL_2(\mathbb Z)</M> 
cover the upper-half plane, and any two images have at most a single point in common. The possible common points are the bottom left-hand corner point which is stabilized by <M>\langle U\rangle</M>, and  the bottom middle point which is stabilized by <M>\langle S\rangle</M>.  

<P/> A congruence subgroup <M>\Gamma</M>  
has a `fundamental domain' <M>D_\Gamma</M> equal to a union of finitely many 
copies of <M>D</M>, one copy for each coset in <M>\Gamma\setminus SL_2(\mathbb Z)</M>. 
The
quotient space <M>X=\Gamma\setminus {\frak h}</M> is not compact, and can be 
compactified in several ways. We are interested in the Borel-Serre 
compactification.
This is a space <M>X^{BS}</M> for which there is an inclusion
<M>X\hookrightarrow X^{BS}</M> and this inclusion is a homotopy equivalence. 
One defines the  <E>boundary</E> <M>\partial X^{BS} = X^{BS} - X</M> and uses the inclusion <M>\partial X^{BS} \hookrightarrow X^{BS} \simeq X</M> to define the cuspidal cohomology group, over the ground ring <M>\mathbb C</M>, as
<Display> H_{cusp}^n(\Gamma,P_{\mathbb C}(k-2)) = \ker (\ H^n(X,P_{\mathbb C}(k-2)) \rightarrow
H^n(\partial X^{BS},P_{\mathbb C}(k-2)) \ ).</Display>
Strictly speaking, this is the definition of  <E>interior cohomology</E> 
<M>H_!^n(\Gamma,P_{\mathbb C}(k-2))</M> which in general contains the
 cuspidal cohomology as a subgroup. However, for congruence subgroups of
<M>SL_2(\mathbb Z)</M> there is equality 
<M>H_!^n(\Gamma,P_{\mathbb C}(k-2)) = H_{cusp}^n(\Gamma,P_{\mathbb C}(k-2))</M>.
<P/> 
Working over <M>\mathbb C</M> has the advantage of 
avoiding the technical issue that <M>\Gamma </M> does not necessarily act freely on <M>{\frak h}</M> since there are points with finite
cyclic stabilizer groups in <M>SL_2(\mathbb Z)</M>. But it has the disadvantage of losing  information about torsion in cohomology. So HAP confronts the issue
by working with a contractible CW-complex 
<M>\tilde X^{BS}</M> on which <M>\Gamma</M> acts freely, and <M>\Gamma</M>-equivariant inclusion
<M>\partial \tilde X^{BS} \hookrightarrow \tilde X^{BS}</M>. The definition of cuspidal cohomology that we use, which coincides with the above definition when working over <M>\mathbb C</M>, is
<Display> H_{cusp}^n(\Gamma,A) = \ker (\ H^n({\rm Hom}_{\, \mathbb  Z\Gamma}(C_\ast(\tilde X^{BS}), A)\,   ) \rightarrow
H^n(\ {\rm Hom}_{\, \mathbb  Z\Gamma}(C_\ast(\tilde \partial X^{BS}), A)\, \ ).</Display>
<P/>The following data is recorded and, using perturbation theory, is  combined
 with free resolutions for <M>C_4</M> and <M>C_6</M> to constuct <M>\tilde X^{BS}</M>.
 
<P/><Alt Only="HTML">&lt;img src="images/filename-2.png" align="center" width="450" alt="Borel-Serre compactified fundamental domain in the upper-half plane"/>
</Alt>

<P/>
The following commands calculate
<Display>H^1_{cusp}(\Gamma_0(39),\mathbb Z) = \mathbb Z^6\ .</Display>
<Example>
<#Include SYSTEM "tutex/11.6.txt">
</Example>
From the Eichler-Shimura isomorphism and the already calculated dimension
of <M>M_2(\Gamma_0(39))\cong \mathbb C^9</M>, we deduce from this cuspidal cohomology that the space 
<M>S_2(\Gamma_0(39))</M> of cuspidal weight <M>2</M> forms is of dimension <M>3</M>,

and the Eisenstein space <M>E_2(\Gamma_0(39))\cong \mathbb C^3</M> is of  dimension <M>3</M>.

<P/>The following commands show that the space <M>S_4(\Gamma_0(39))</M> of cuspidal weight <M>4</M> forms  is of dimension <M>12</M>.

<Example>
<#Include SYSTEM "tutex/11.6a.txt">
</Example>

</Section>

<Section><Heading>Hecke operators</Heading>

A congruence subgroup <M>\Gamma \le SL_m(\mathbb Z)</M> and element <M>g\in SL_m(\mathbb Q)</M>  determine the subgroup
<M>\Gamma' = \Gamma \cap g\Gamma g^{-1} </M> and  homomorphisms
<Display> \Gamma\ \hookleftarrow\ \Gamma'\ \ \stackrel{\gamma \mapsto g^{-1}\gamma g}{\longrightarrow}\ \ g^{-1}\Gamma' g\ \hookrightarrow \Gamma\ . </Display> 
These homomorphisms give rise to homomorphisms of cohomology groups
<Display>H^n(\Gamma,\mathbb Z)\ \ \stackrel{tr}{\leftarrow} \ \ H^n(\Gamma',\mathbb Z) \ \ \stackrel{\alpha}{\leftarrow} \ \ H^n(g^{-1}\Gamma' g,\mathbb Z) \ \  \stackrel{\beta}{\leftarrow} H^n(\Gamma, \mathbb Z) </Display>
with <M>\alpha</M>, <M>\beta</M> functorial maps, and <M>tr</M> the transfer map.
We define the composite <M>T_g=tr \circ \alpha \circ \beta\colon H^n(\Gamma, \mathbb Z) \rightarrow H^n(\Gamma, \mathbb Z)</M> to be the <E> Hecke operator </E>  determined by <M>g</M>.
Further details on this description of Hecke operators can be found in 
<Cite Key="stein" Where="Appendix by P. Gunnells"/>.

<P/>For each integer <M>s\ge 1</M> we set <M>T_s =T_s</M> with
for <M>g=\left(\begin{array}{cc}1&amp;0\\0&amp;\frac{1}{s}\end{array}\right)</M>.

<P/>The following commands compute <M>T_2</M> and <M>T_5</M>
 for <M>n=1</M>
and
 <M>\Gamma=\Gamma_0(39)</M>. The commands also compute the eigenvalues of these two Hecke operators. The final command confirms that <M>T_2</M> and <M>T_5</M> commute. (It is a fact that <M>T_pT_q=T_qT_p</M> for all integers <M>p,q</M>.)   

<Example>
<#Include SYSTEM "tutex/11.7.txt">
</Example>

</Section>

<Section><Heading>Reconstructing modular forms from cohomology computations</Heading>

<P/>Hecke operators restrict to operators on cuspidal cohomology. On the left-hand side of the Eichler-Shimura isomorphism 
Hecke operators restrict to  operators <M>T_s\colon S_2(\Gamma) \rightarrow S_2(\Gamma)</M> for <M>s\ge 1</M>.


<P/>Let us now introduce the function <M>q=q(z)=e^{2\pi i z}</M> which is holomorphic on <M>\mathbb C</M>.
For any modular form <M>f(z)</M> there are numbers <M>a_n</M> such that
<Display>f(z) = \sum_{s=0}^\infty a_sq^s </Display>
for all <M>z\in {\frak h}</M>. The form <M>f</M> is a cusp form if <M>a_0=0</M>.

<P/>  A non-zero
cusp form <M>f\in S_2(\Gamma)</M> is an <E>eigenform</E> if it is simultaneously an eigenvector for the Hecke operators <M>T_s</M> for all <M>s =1,2,3,\cdots</M>. An eigenform is said to be <E>normalized</E> if its coefficient <M>a_1=1</M>. It turns out that if <M>f</M> is a normalized eigenform then the coefficient <M>a_s</M> is an eigenvalue for <M>T_s</M> (see for instance <Cite Key="stein"/> for details).
 It can be shown <Cite Key="atkinlehner"/> that <M>f\in S_2(\Gamma_0(N))</M> admits a basis of eigenforms.

<P/> This all implies that, in principle,
 we can construct an  approximation to an explicit
 basis for the space <M>S_2(\Gamma)</M> of cusp
 forms by computing eigenvalues for Hecke operators. 

<P/> Suppose that we would like a basis for <M>S_2(\Gamma_0(11))</M>. The following commands first show that <M>H^1_{cusp}(\Gamma_0(11),\mathbb Z)=\mathbb Z\oplus \mathbb Z</M> from which we deduce that <M>S_2(\Gamma_0(11)) =\mathbb C</M> is <M>1</M>-dimensional. Then eigenvalues of 
Hecke operators are calculated to establish that the modular form
<Display>f = q -2q^2 -q^3 +q^4 +q^5 +2q^6 -2q^7 +2q^8 -3q^9 -2q^{10} + \cdots </Display>
constitutes a basis for <M>S_2(\Gamma_0(11))</M>. 

<Example>
<#Include SYSTEM "tutex/11.7a.txt">
</Example>

<P/>  For a normalized eigenform <M>f=1 + \sum_{s=2}^\infty a_sq^s</M>
the coefficients <M>a_s</M> with <M>s</M> a composite integer can be expressed in terms of the coefficients <M>a_p</M> for prime <M>p</M>.
If <M>r,s</M> are coprime then <M>T_{rs} =T_rT_s</M>.
If <M>p</M> is a prime that is not a divisor of the level <M>N</M> of <M>\Gamma</M> then
<M>a_{p^m} =a_{p^{m-1}}a_p - p a_{p^{m-2}}.</M>
If the prime <M> p</M> divides <M>N</M> then <M>a_{p^m} = (a_p)^m</M>. It thus suffices to compute the coefficients <M>a_p</M> for prime integers <M>p</M> only.
</Section>

<Section><Heading>The Picard group</Heading>
Let us now consider the <E>Picard group</E> <M>G=SL_2(\mathbb Z[ i])</M> and 
its action on <E>upper-half space</E>
<Display>{\frak h}^3 =\{(z,t) \in \mathbb C\times \mathbb R\ |\ t &gt; 0\} \ . </Display>
To describe the action we introduce the symbol <M>j</M> satisfying <M>j^2=-1</M>, <M>ij=-ji</M> and write <M>z+tj</M> instead of <M>(z,t)</M>. The action is given by 
<Display>\left(\begin{array}{ll}a&amp;b\\ c &amp;d \end{array}\right)\cdot (z+tj) \ = \ \left(a(z+tj)+b\right)\left(c(z+tj)+d\right)^{-1}\ .</Display>

Alternatively,  and more explicitly, the action is given by 
<Display>\left(\begin{array}{ll}a&amp;b\\ c &amp;d \end{array}\right)\cdot (z+tj) \ = \  
\frac{(az+b)\overline{(cz+d) } + a\overline c y^2}{|cz +d|^2 + |c|^2y^2} \ +\ 
\frac{y}{|cz+d|^2+|c|^2y^2}\, j
      \ .</Display>

<P/>A standard 'fundamental domain' <M>D</M> for this action is the following region (with some of the boundary points removed).
<Display>
 \{z+tj\in {\frak h}^3\ |\ 0 \le |{\rm Re}(z)| \le \frac{1}{2}, 0\le {\rm Im}(z) \le \frac{1}{2}, z\overline z +t^2 \ge 1\}
</Display>

<Alt Only="HTML">&lt;img src="images/picarddomain.png" align="center" width="350" alt="Fundamental domain for the Picard group"/>
</Alt>
<P/>The four bottom vertices of <M>D</M> are 
<M>a = -\frac{1}{2} +\frac{1}{2}i +\frac{\sqrt{2}}{2}j</M>,
<M>b = -\frac{1}{2}  +\frac{\sqrt{3}}{2}j</M>,
<M>c = \frac{1}{2}  +\frac{\sqrt{3}}{2}j</M>,
<M>d = \frac{1}{2} +\frac{1}{2}i +\frac{\sqrt{2}}{2}j</M>.

<P/>The upper-half space <M>{\frak h}^3</M> can be retracted onto a <M>2</M>-dimensional subspace <M>{\cal T} \subset {\frak h}^3</M>. The space <M>{\cal T}</M>
is a contractible
<M>2</M>-dimensional regular CW-complex, and the action of the Picard group <M>G</M> restricts to a cellular action of <M>G</M> on <M>{\cal T}</M>. Under this action there is one orbit of <M>2</M>-cells, represented by the curvilinear square with vertices <M>a</M>, <M>b</M>, <M>c</M> and <M>d</M> in the picture. This <M>2</M>-cell has stabilizer group isomorphic to the quaternion group
<M>Q_4</M> of order <M>8</M>.
 There are two orbits of <M>1</M>-cells, both with stabilizer group isomorphic to a semi-direct product <M>C_3:C_4</M>. There is
  one orbit of <M>0</M>-cells, with stabilizer group isomorphic to <M>SL(2,3)</M>. 


<P/>Using perturbation techniques, the <M>2</M>-complex <M>{\cal T}</M> can be combined with free resolutions for the cell stabilizer groups to contruct a regular CW-complex <M>X</M> on which the Picard group <M>G</M> acts freely. 
The following commands compute the first few terms of the free <M>\mathbb ZG</M>-resolution 
  <M>R_\ast =C_\ast X</M>. 
Then   <M>R_\ast</M> is used to compute 
<Display>H^1(G,\mathbb Z) =0\ ,</Display>
<Display>H^2(G,\mathbb Z) =\mathbb Z_2\oplus \mathbb Z_2\ ,</Display>
<Display>H^3(G,\mathbb Z) =\mathbb Z_6\ ,</Display>
<Display>H^4(G,\mathbb Z) =\mathbb Z_4\oplus \mathbb Z_{24}\ ,</Display>
 and compute a free presentation for <M>G</M> involving four generators and seven relators.

<Example>
<#Include SYSTEM "tutex/11.8.txt">
</Example>

We can also compute the cohomology of <M>G=SL_2(\mathbb Z[i])</M> with 
coefficients in a module such as the module 
<M>P_{\mathbb Z[i]}(k)</M> of degree <M>k</M>
homogeneous polynomials with coefficients in <M>\mathbb Z[i]</M>
and with the action described above. For instance, 
the following commands compute
<Display>H^1(G,P_{\mathbb Z[i]}(24)) = (\mathbb Z_2)^4 \oplus \mathbb Z_4
\oplus \mathbb Z_8 \oplus \mathbb Z_{40} \oplus \mathbb Z_{80}\, ,</Display>
<Display>H^2(G,P_{\mathbb Z[i]}(24)) = (\mathbb Z_2)^{24} \oplus \mathbb Z_{520030}\oplus \mathbb Z_{1040060} \oplus  \mathbb Z^2\, ,</Display>
<Display>H^3(G,P_{\mathbb Z[i]}(24)) = (\mathbb Z_2)^{22} \oplus \mathbb Z_{4}\oplus (\mathbb Z_{12})^2 \, .</Display>

<Example>
<#Include SYSTEM "tutex/11.9.txt">
</Example>

</Section>

<Section><Heading>Bianchi groups</Heading>
The <E>Bianchi groups</E> are the groups <M>G=PSL_2({\cal O}_{-d})</M> where <M>d</M> is a square free positive integer and <M>{\cal O}_{-d}</M> is the ring of integers
of the imaginary quadratic field <M>\mathbb Q(\sqrt{-d})</M>. More explicitly, 
<Display>{\cal O}_{-d} = \mathbb Z\left[\sqrt{-d}\right]~~~~~~~~ {\rm if~} d \equiv 1 {\rm ~mod~} 4\, ,</Display>
<Display>{\cal O}_{-d} = \mathbb Z\left[\frac{1+\sqrt{-d}}{2}\right]~~~~~ {\rm if~} d \equiv 2,3 {\rm ~mod~} 4\, .</Display>
These groups act on upper-half space <M>{\frak h}^3</M> in the same way as the Picard group.   Upper-half space can be tessellated by a  'fundamental domain'
 for this action. Moreover, as with the Picard group, this tessellation contains a <M>2</M>-dimensional cellular subspace <M>{\cal T}\subset {\frak h}^3</M>
where <M>{\cal T}</M> is a contractible CW-complex on which <M>G</M> acts cellularly. It should be mentioned that the fundamental domain and the contractible <M>2</M>-complex  <M>{\cal T}</M> are not uniquely determined by <M>G</M>.
 Various algorithms exist for computing <M>{\cal T}</M> and its cell stabilizers. One algorithm due to  Swan 
<Cite Key="swan"/> has been implemented by Alexander Rahm 
<Cite Key="rahmthesis"/> and the output for various values of <M>d</M> are stored in HAP. Another approach is to use Voronoi's theory of perfect forms. This approach has been implemented by Sebastian Schoennenbeck <Cite Key="schoennenbeck"/> and, again, its output for various values of <M>d</M> are 
stored in HAP. The following commands  combine data from Schoennenbeck's algorithm with free resolutions for cell stabiliers to compute
 
<Display>H^1(PSL_2({\cal O}_{-6}),P_{{\cal O}_{-6}}(24)) =
(\mathbb Z_2)^4
\oplus \mathbb Z_{12}
\oplus \mathbb Z_{24}
\oplus \mathbb Z_{9240}
\oplus \mathbb Z_{55440}
\oplus \mathbb Z^4\,,
</Display>
<Display>H^2(PSL_2({\cal O}_{-6}),P_{{\cal O}_{-6}}(24)) =
\begin{array}{l}
(\mathbb Z_2)^{26}
\oplus \mathbb (Z_{6})^8
\oplus \mathbb (Z_{12})^{9}
\oplus \mathbb Z_{24}
\oplus (\mathbb Z_{120})^2
\oplus (\mathbb Z_{840})^3\\
\oplus \mathbb Z_{2520}
\oplus (\mathbb Z_{27720})^2
\oplus (\mathbb Z_{24227280})^2
\oplus (\mathbb Z_{411863760})^2\\
\oplus \mathbb Z_{2454438243748928651877425142836664498129840}\\
\oplus \mathbb Z_{14726629462493571911264550857019986988779040}\\
\oplus \mathbb Z^4\end{array}\ ,
</Display>
<Display>H^3(PSL_2({\cal O}_{-6}),P_{{\cal O}_{-6}}(24)) =
(\mathbb Z_2)^{23}
\oplus \mathbb Z_{4}
\oplus (\mathbb Z_{12})^2\ .
</Display>
Note that the action of <M>SL_2({\cal O}_{-d})</M> on <M>P_{{\cal O}_{-d}}(k)</M> induces an action of <M>PSL_2({\cal O}_{-d})</M>
provided <M>k</M> is even.

<Example>
<#Include SYSTEM "tutex/11.10.txt">
</Example>

<P/>We can also consider the coefficient module
<Display> P_{{\cal O}_{-d}}(k,\ell) = P_{{\cal O}_{-d}}(k) \otimes_{{\cal O}_{-d}} \overline{P_{{\cal O}_{-d}}(\ell)}   </Display>
where the bar denotes a twist in the action obtained from complex conjugation. For an action of the projective linear group we must insist that <M>k+\ell</M> is even. The following commands compute
<Display>H^2(PSL_2({\cal O}_{-11}),P_{{\cal O}_{-11}}(5,5)) = 
(\mathbb Z_2)^8 \oplus \mathbb Z_{60} \oplus (\mathbb Z_{660})^3 \oplus \mathbb Z^6\,,      </Display>
a computation which was first made, along with many other cohomology computationsfor Bianchi groups, by Mehmet Haluk Sengun <Cite Key="sengun"/>.
<Example>
<#Include SYSTEM "tutex/11.10b.txt">
</Example>

<P/>The function <Code>ResolutionPSL2QuadraticIntegers(-d,n)</Code> relies on a limited data base produced by the algorithms implemented by Schoennenbeck and Rahm.  
The function also covers some cases covered by entering a sring
"-d+I" as first variable. These cases  
correspond to projective special groups of module automorphisms of lattices of rank 2 over the integers of the imaginary quadratic number field <M>\mathbb Q(\sqrt{-d})</M> with non-trivial Steinitz-class. In the case of a larger class group there are cases labelled "-d+I2",...,"-d+Ik" and the Ij together with O-d form a system of representatives of elements of the class group modulo squares and Galois action.


 For instance,
the following commands compute 
<Display>H_2(PSL({\cal O}_{-21+I2}),\mathbb Z) = \mathbb Z_2\oplus  \mathbb Z^6\, .</Display>

<Example>
<#Include SYSTEM "tutex/11.11.txt">
</Example>
</Section>

<Section><Heading>Some other infinite matrix groups</Heading>

Analogous to the functions for Bianchi groups, HAP has functions
<List>
<Item><Code>ResolutionSL2QuadraticIntegers(-d,n)</Code> </Item>
<Item><Code>ResolutionSL2ZInvertedInteger(m,n)</Code></Item>
<Item><Code>ResolutionGL2QuadraticIntegers(-d,n)</Code></Item>
<Item><Code>ResolutionPGL2QuadraticIntegers(-d,n)</Code></Item>
<Item><Code>ResolutionGL3QuadraticIntegers(-d,n)</Code></Item>
<Item><Code>ResolutionPGL3QuadraticIntegers(-d,n)</Code></Item>
</List>
for computing free resolutions for certain values of <M>SL_2({\cal O}_{-d})</M>,
<M>SL_2(\mathbb Z[\frac{1}{m}])</M>,
<M>GL_2({\cal O}_{-d})</M> and <M>PGL_2({\cal O}_{-d})</M>.
Additionally, the function 
<List>
<Item><Code>ResolutionArithmeticGroup("string",n)</Code></Item>
</List>
 can be used to compute resolutions for groups whose data (provided by Sebastian Schoennenbeck, Alexander Rahm and Mathieu Dutour) is stored in the directory <Code>gap/pkg/Hap/lib/Perturbations/Gcomplexes</Code> .


<P/>For instance, the following commands   compute

<Display>H^1(SL_2({\cal O}_{-6}),P_{{\cal O}_{-6}}(24)) =
(\mathbb Z_2)^4
\oplus \mathbb Z_{12}
\oplus \mathbb Z_{24}
\oplus \mathbb Z_{9240}
\oplus \mathbb Z_{55440}
\oplus \mathbb Z^4\,,
</Display>
<Display>H^2(SL_2({\cal O}_{-6}),P_{{\cal O}_{-6}}(24)) =
\begin{array}{l}
(\mathbb Z_2)^{26}
\oplus \mathbb (Z_{6})^7
\oplus \mathbb (Z_{12})^{10}
\oplus \mathbb Z_{24}
\oplus (\mathbb Z_{120})^2
\oplus (\mathbb Z_{840})^3\\
\oplus \mathbb Z_{2520}
\oplus (\mathbb Z_{27720})^2
\oplus (\mathbb Z_{24227280})^2
\oplus (\mathbb Z_{411863760})^2\\
\oplus \mathbb Z_{2454438243748928651877425142836664498129840}\\
\oplus \mathbb Z_{14726629462493571911264550857019986988779040}\\
\oplus \mathbb Z^4\end{array}\ ,
</Display>
<Display>H^3(SL_2({\cal O}_{-6}),P_{{\cal O}_{-6}}(24)) =
(\mathbb Z_2)^{58}
\oplus (\mathbb Z_{4})^4
\oplus (\mathbb Z_{12})\ .
</Display>


<Example>
<#Include SYSTEM "tutex/11.10a.txt">
</Example>

<P/>The following commands construct free resolutions up to degree 5 for the groups <M>SL_2(\mathbb Z[\frac{1}{2}])</M>,
<M>GL_2({\cal O}_{-2})</M>, <M>GL_2({\cal O}_{2})</M>, <M>PGL_2({\cal O}_{2})</M>, <M>GL_3({\cal O}_{-2})</M>, <M>PGL_3({\cal O}_{-2})</M>.
The final command constructs a free resolution up to degree 3 for <M>PSL_4(\mathbb Z)</M>.
<Example>
<#Include SYSTEM "tutex/11.12.txt">
</Example>

</Section>
</Chapter>
